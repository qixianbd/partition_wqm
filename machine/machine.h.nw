All of the code is protected by the following copyright notice.

<<SUIF copyright>>=
/*  Copyright (c) 1994 Stanford University

    All rights reserved.

    Copyright (c) 1995,1996 The President and Fellows of Harvard University

    All rights reserved.

    This software is provided under the terms described in
    the "suif_copyright.h" include file. */

#include <suif_copyright.h>
@

\section{Header file for the machine library}
\label{secMachineHeader}

For the most part, the file [[machine.h]] is a typical SUIF library
header file.  It contains [[#include]] references so that the library can
be compiled or simply included in another pass's compilation.  The
include files are indented to show the dependences between the header
files within the machine library.  It also determines the appropriate
definition for [[EXPORTED_BY_MACHINE]] so that we can compile on
both Unix and Win32 platforms.

<<machine.h>>=
/* file "machine.h" */

<<SUIF copyright>>

/*  Header for SUIF library of machine-specific definitions and routines */

#ifndef MACHINE_H
#define MACHINE_H

// Mark exported symbols as DLL imports for Win32. (jsimmons)
#if defined(_WIN32) && !defined(__CYGWIN32__) && !defined(MACHINELIB)
#define EXPORTED_BY_MACHINE _declspec(dllimport) extern
#else
#define EXPORTED_BY_MACHINE extern
#endif

/* 
 *  Use a macro to include files so that they can be treated differently
 *  when compiling the library than when compiling an application.
 */

#ifdef MACHINELIB
#define MACHINEINCLFILE(F) #F
#else
#define MACHINEINCLFILE(F) <machine/ ## F ## >
#endif

/*
 *  The files are listed below in groups.  Each group generally depends
 *  on the groups included before it.  Within each group, indentation is
 *  used to show the dependences between files.
 */

/* this should always be defined first */
#include <suif1.h>

/* annotation, target-architecture, and effective-address helper routines */
#include MACHINEINCLFILE(annoteHelper.h)
#include MACHINEINCLFILE(archInfo.h)
#include MACHINEINCLFILE(eaHelper.h)

/* machine instruction base classes */
#include MACHINEINCLFILE(machineDefs.h)
#include   MACHINEINCLFILE(machineInstr.h)

#ifdef M_ALPHA
#include   MACHINEINCLFILE(alphaOps.h)
#include     MACHINEINCLFILE(alphaInstr.h)
#endif

#ifdef M_MIPS
#include   MACHINEINCLFILE(mipsOps.h)
#include     MACHINEINCLFILE(mipsInstr.h)
#endif

#ifdef M_PPC
#include   MACHINEINCLFILE(ppcOps.h)
#include     MACHINEINCLFILE(ppcInstr.h)
#endif

#ifdef M_X86
#include   MACHINEINCLFILE(x86Ops.h)
#include     MACHINEINCLFILE(x86Instr.h)
#endif

/* code gen/query helper -- depends upon archInfo.h and machineDefs.h */
#include MACHINEINCLFILE(machineUtil.h)

#endif /* MACHINE_H */
@

To create a machine library with support for a particular target
architecture, you must set the appropriate [[MACHSUIF_TARGET_*]]
environment variable.  The machine library makefile checks these
environment variables, and it will not include the library routines
for a particular architecture if the environment variable is not set.
Notice that the top-level {\em machsuif} makefile also tests 
these environment variables to determine what architecture-specific
passes need to be built.  For example, if you want to be able to
produce Digital Alpha code using the machine library, you would set
the environment variable [[MACHSUIF_TARGET_ALPHA]].  A single copy of the
machine library will support multiple architectures if you set
multiple [[MACHSUIF_TARGET_*]] environment variables.
